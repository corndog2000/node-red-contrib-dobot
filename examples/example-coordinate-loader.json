[
    {
        "id": "coord-loader-1",
        "type": "dobot-coordinates",
        "z": "example.flow",
        "name": "Robot Positions",
        "storeName": "main-robot",
        "coordinatesData": "[\n  {\n    \"name\": \"Home Position\",\n    \"x\": 200,\n    \"y\": 0,\n    \"z\": 200,\n    \"r\": 0\n  },\n  {\n    \"name\": \"Pick Position\",\n    \"x\": 250,\n    \"y\": 50,\n    \"z\": 100,\n    \"r\": 0\n  },\n  {\n    \"name\": \"Place Position\",\n    \"x\": 150,\n    \"y\": -100,\n    \"z\": 100,\n    \"r\": 45\n  },\n  {\n    \"name\": \"Safe Height\",\n    \"x\": 200,\n    \"y\": 0,\n    \"z\": 250,\n    \"r\": 0\n  },\n  {\n    \"name\": \"Joint Home\",\n    \"j1\": 0,\n    \"j2\": 0,\n    \"j3\": 0,\n    \"j4\": 0\n  }\n]",
        "x": 320,
        "y": 100,
        "wires": [[]]
    },
    {
        "id": "inject-1",
        "type": "inject",
        "z": "example.flow",
        "name": "Start Pick & Place",
        "props": [{"p": "payload"}],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 200,
        "wires": [["move-home"]]
    },
    {
        "id": "move-home",
        "type": "dobot-move",
        "z": "example.flow",
        "name": "Move to Home",
        "connection": "",
        "moveType": "MovJ",
        "coordType": "cartesian",
        "waitForComplete": true,
        "coordinateStore": "main-robot",
        "coordinateName": "Home Position",
        "robotSpeed": 50,
        "x": 360,
        "y": 200,
        "wires": [["move-pick"]]
    },
    {
        "id": "move-pick",
        "type": "dobot-move",
        "z": "example.flow",
        "name": "Move to Pick",
        "connection": "",
        "moveType": "MovL",
        "coordType": "cartesian",
        "waitForComplete": true,
        "coordinateStore": "main-robot",
        "coordinateName": "Pick Position",
        "robotSpeed": 30,
        "x": 550,
        "y": 200,
        "wires": [["delay-1"]]
    },
    {
        "id": "delay-1",
        "type": "delay",
        "z": "example.flow",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 720,
        "y": 200,
        "wires": [["move-safe"]]
    },
    {
        "id": "move-safe",
        "type": "dobot-move",
        "z": "example.flow",
        "name": "Move to Safe Height",
        "connection": "",
        "moveType": "MovL",
        "coordType": "cartesian",
        "waitForComplete": true,
        "coordinateStore": "main-robot",
        "coordinateName": "Safe Height",
        "robotSpeed": 80,
        "x": 370,
        "y": 280,
        "wires": [["move-place"]]
    },
    {
        "id": "move-place",
        "type": "dobot-move",
        "z": "example.flow",
        "name": "Move to Place",
        "connection": "",
        "moveType": "MovJ",
        "coordType": "cartesian",
        "waitForComplete": true,
        "coordinateStore": "main-robot",
        "coordinateName": "Place Position",
        "robotSpeed": 50,
        "x": 560,
        "y": 280,
        "wires": [["debug-1"]]
    },
    {
        "id": "debug-1",
        "type": "debug",
        "z": "example.flow",
        "name": "Complete",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "comment-1",
        "type": "comment",
        "z": "example.flow",
        "name": "Example: Using Predefined Coordinates",
        "info": "This example demonstrates how to use the new coordinate loader node.\n\n1. The 'Robot Positions' node loads predefined coordinates into the 'main-robot' store\n2. Move nodes can select coordinates from the store instead of using msg.payload\n3. Each move node can have a different speed percentage (1-100%)\n4. The waitForComplete option ensures sequential execution\n\nNote: You still need to configure a dobot-connection node for this flow to work.",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "inject-2",
        "type": "inject",
        "z": "example.flow",
        "name": "Override with Payload",
        "props": [
            {"p": "payload"},
            {"p": "robotSpeed", "v": "20", "vt": "num"}
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"x\": 300, \"y\": 0, \"z\": 150, \"r\": 0}",
        "payloadType": "json",
        "x": 160,
        "y": 380,
        "wires": [["move-override"]]
    },
    {
        "id": "move-override",
        "type": "dobot-move",
        "z": "example.flow",
        "name": "Move with Override",
        "connection": "",
        "moveType": "MovJ",
        "coordType": "cartesian",
        "waitForComplete": true,
        "coordinateStore": "main-robot",
        "coordinateName": "Home Position",
        "robotSpeed": 100,
        "x": 380,
        "y": 380,
        "wires": [["debug-2"]]
    },
    {
        "id": "debug-2",
        "type": "debug",
        "z": "example.flow",
        "name": "Override Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 380,
        "wires": []
    },
    {
        "id": "comment-2",
        "type": "comment",
        "z": "example.flow",
        "name": "Override Example",
        "info": "This shows how msg.payload and msg.robotSpeed can override the configured values",
        "x": 150,
        "y": 340,
        "wires": []
    }
]